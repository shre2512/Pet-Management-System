
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.event.MouseInputListener;
import org.jxmapviewer.OSMTileFactoryInfo;
import org.jxmapviewer.input.PanMouseInputListener;
import org.jxmapviewer.input.ZoomMouseWheelListenerCenter;
import org.jxmapviewer.viewer.DefaultTileFactory;
import org.jxmapviewer.viewer.GeoPosition;
import org.jxmapviewer.viewer.TileFactoryInfo;
import org.jxmapviewer.viewer.WaypointPainter;
import waypoint.EventWaypoint;
import waypoint.MyWaypoint;
import waypoint.WaypointRender;
import java.util.Date; 
import java.util.logging.Level;
import java.util.logging.Logger;
import model.databaseConnection;
import model.sendEmail;
import model.sendSMS;


/**
 *
 * @author babsybabu
 */
public class kennelJPanel extends javax.swing.JPanel {

    /**
     * Creates new form kennelJPanel
     */
    private Set<MyWaypoint> waypoints = new HashSet<>();
    private EventWaypoint event;
    private Date fromDate;
    private Date toDate;
    private int numberOfDays;
    private String name;
    private String address;
    private String pickup;
    private int pricePerDay;
    private int rent;
    private int userID;
    sendEmail emailNotification;
    sendSMS smsNotification;
    databaseConnection databaseConnection;
    
    
    public kennelJPanel(databaseConnection databaseConnection, int userID, sendEmail emailNotification, sendSMS smsNotification) {
       initComponents();
       init();
       this.userID=userID;
       this.databaseConnection=databaseConnection;
       this.emailNotification = emailNotification;
       this.smsNotification = smsNotification;
    }
    private void init(){
        TileFactoryInfo info =new OSMTileFactoryInfo();
        DefaultTileFactory tileFactory = new DefaultTileFactory(info);
        jXMapViewer1.setTileFactory(tileFactory);
        GeoPosition geo = new GeoPosition(42.361145,-71.057083);
        jXMapViewer1.setAddressLocation(geo);
        jXMapViewer1.setZoom(5);
        
        txtKennelName.setEditable(false);
        txtKennelAddress.setEditable(false);
        txtPricePerDay.setEditable(false);
        
        MouseInputListener mm = new PanMouseInputListener(jXMapViewer1);
        jXMapViewer1.addMouseListener(mm);
        jXMapViewer1.addMouseMotionListener(mm);
        jXMapViewer1.addMouseWheelListener(new ZoomMouseWheelListenerCenter(jXMapViewer1));
        event=getEvent();
    }
    
    private void populateFields(String kennel_name)
    {
        try {
            ResultSet result = databaseConnection.executeSelectKennel(kennel_name);
            
            while(result.next())
            {
                int kennelPrice = result.getInt("price_per_day");
                txtPricePerDay.setText(String.valueOf(kennelPrice));
            }
        }catch (Exception ex) {
            Logger.getLogger(kennelAdminUpdatePrice.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void initWaypoint(){
        WaypointPainter<MyWaypoint> wp =new WaypointRender();
        wp.setWaypoints(waypoints);
        jXMapViewer1.setOverlayPainter(wp);
          for (MyWaypoint d : waypoints) {
            jXMapViewer1.add(d.getButton());
        }
    }
    
    private EventWaypoint getEvent(){
        return new EventWaypoint(){
            @Override
            public void selected(MyWaypoint waypoint){
                txtKennelName.setText(waypoint.getName());
                txtKennelAddress.setText(waypoint.getAddress());
                populateFields(waypoint.getName());
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtKennelName = new javax.swing.JTextField();
        txtKennelAddress = new javax.swing.JTextField();
        dateChooserToDateKennel = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        dateChooserFromDateKennel = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        txtPricePerDay = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblPickup = new javax.swing.JLabel();
        cmbPickup = new javax.swing.JComboBox<>();
        jXMapViewer1 = new org.jxmapviewer.JXMapViewer();
        btnKennelsOnMap = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Address :");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Name :");

        txtKennelName.setPreferredSize(new java.awt.Dimension(71, 30));
        txtKennelName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKennelNameActionPerformed(evt);
            }
        });

        txtKennelAddress.setPreferredSize(new java.awt.Dimension(71, 30));
        txtKennelAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKennelAddressActionPerformed(evt);
            }
        });

        dateChooserToDateKennel.setPreferredSize(new java.awt.Dimension(88, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("From :");

        dateChooserFromDateKennel.setPreferredSize(new java.awt.Dimension(88, 30));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("To :");

        btnSave.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 0, 0));
        btnSave.setText("Book");
        btnSave.setPreferredSize(new java.awt.Dimension(72, 30));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtPricePerDay.setPreferredSize(new java.awt.Dimension(71, 30));
        txtPricePerDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPricePerDayActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("   Price Per Day :");

        lblPickup.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblPickup.setText("Pickup required?");

        cmbPickup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        cmbPickup.setPreferredSize(new java.awt.Dimension(72, 30));

        btnKennelsOnMap.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKennelsOnMap.setText("View Kennels");
        btnKennelsOnMap.setPreferredSize(new java.awt.Dimension(76, 30));
        btnKennelsOnMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKennelsOnMapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXMapViewer1Layout = new javax.swing.GroupLayout(jXMapViewer1);
        jXMapViewer1.setLayout(jXMapViewer1Layout);
        jXMapViewer1Layout.setHorizontalGroup(
            jXMapViewer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXMapViewer1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnKennelsOnMap, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jXMapViewer1Layout.setVerticalGroup(
            jXMapViewer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXMapViewer1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnKennelsOnMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(208, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXMapViewer1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dateChooserToDateKennel, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                .addComponent(txtKennelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtPricePerDay, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(159, 159, 159)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(lblPickup, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbPickup, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtKennelAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateChooserFromDateKennel, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jXMapViewer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtKennelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtKennelAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPricePerDay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbPickup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPickup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateChooserFromDateKennel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChooserToDateKennel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtKennelNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKennelNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKennelNameActionPerformed

    private void txtKennelAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKennelAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKennelAddressActionPerformed

    private void txtPricePerDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPricePerDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPricePerDayActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        name=txtKennelName.getText();
        address=txtKennelAddress.getText();
        toDate=dateChooserToDateKennel.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
        String toDateString = dateFormat.format(toDate);
        fromDate = dateChooserFromDateKennel.getDate();
        String fromDateString = dateFormat.format(fromDate);
        numberOfDays=(int)( (fromDate.getTime() - toDate.getTime()) / (1000 * 60 * 60 * 24));
        pricePerDay=Integer.parseInt(txtPricePerDay.getText());
        rent = numberOfDays * pricePerDay;
        pickup = cmbPickup.getSelectedItem().toString();
        JOptionPane.showMessageDialog(this, "Kennel booked successfully!");
        txtKennelName.setText("");
        txtKennelAddress.setText("");
        txtPricePerDay.setText("");
        
        try {
            databaseConnection.insertKennelBooking(userID,name,address,toDateString,fromDateString,pricePerDay,numberOfDays,rent,pickup);
            String emailID = getEmailID(userID);
            if(emailID != null)
            {
                try {
                    if(pickup.equals("Yes"))
                    {
                        emailNotification.sendEmail("Kennel Booked!", "You have booked a kennel from " + toDateString + " to " + fromDateString + ". Your rent amount is: $" + rent + ". The pickup service confirmation will be sent soon!", emailID);
                    }
                    else
                    {
                        emailNotification.sendEmail("Kennel Booked!", "You have booked a kennel from " + toDateString + " to " + fromDateString + ". Your rent amount is: $" + rent, emailID);
                    }
                    
                } catch (Exception ex) {
                    Logger.getLogger(petFoodJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
            String phoneNumber = getPhoneNumber(userID);
            if(phoneNumber != null)
            {
                try {
                    if(pickup.equals("Yes"))
                    {
                        smsNotification.sendSMS("+1" + phoneNumber, "Kennel Booked! You have booked a kennel from " + toDateString + " to " + fromDateString + ". Your rent amount is: $" + rent + ". The pickup service confirmation will be sent soon!");
                    }
                    else
                    {
                        smsNotification.sendSMS("+1" + phoneNumber, "Kennel Booked! You have booked a kennel from " + toDateString + " to " + fromDateString + ". Your rent amount is: $" + rent);
                    }
                    
                } catch (Exception ex) {
                    Logger.getLogger(petFoodJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(petFoodJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed
    
    private String getEmailID(int userID)
    {
        try {
            ResultSet result = databaseConnection.executeSelect("SELECT * FROM usertable");
            
            while(result.next()){
                
                if(result.getInt("id") == userID)
                {
                    return result.getString("email_id");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(petFoodJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private String getPhoneNumber(int userID)
    {
        try {
            ResultSet result = databaseConnection.executeSelect("SELECT * FROM usertable");
            while(result.next()){
                
                if(result.getInt("id") == userID)
                {
                    return result.getString("phone_number");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(petFoodJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private void btnKennelsOnMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKennelsOnMapActionPerformed
        // TODO add your handling code here:
        waypoints.add(new MyWaypoint("The Mindful Mutt","16 Harvard Ave, Allston, MA 02134",event,new GeoPosition(42.36114667727058, -71.13242913502957)));
        waypoints.add(new MyWaypoint("The Urban Hound Hotel & Daycare","129 W Malden St, Boston, MA 02118",event,new GeoPosition(42.3441904832612, -71.06726660373947)));
        waypoints.add(new MyWaypoint("The Dog Port","236 Sumner St, East Boston, MA 02128",event,new GeoPosition(42.376150664565635, -71.03823688912777)));
        waypoints.add(new MyWaypoint("Tails","385 Centre St, Jamaica Plain, MA 02130",event,new GeoPosition(42.36757788354394, -71.05820710298593)));

        initWaypoint();
    }//GEN-LAST:event_btnKennelsOnMapActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKennelsOnMap;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbPickup;
    private com.toedter.calendar.JDateChooser dateChooserFromDateKennel;
    private com.toedter.calendar.JDateChooser dateChooserToDateKennel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private org.jxmapviewer.JXMapViewer jXMapViewer1;
    private javax.swing.JLabel lblPickup;
    private javax.swing.JTextField txtKennelAddress;
    private javax.swing.JTextField txtKennelName;
    private javax.swing.JTextField txtPricePerDay;
    // End of variables declaration//GEN-END:variables
}
