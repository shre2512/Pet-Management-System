/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.databaseConnection;
import model.sendEmail;
import model.sendSMS;

/**
 *
 * @author shrey
 */
public class petGroomingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form petGroomingJPanel
     */
    int userID;
    sendEmail emailNotification;
    sendSMS smsNotification;
    databaseConnection databaseConnection;
    
    public petGroomingJPanel(databaseConnection databaseConnection, int userID, sendEmail emailNotification, sendSMS smsNotification) {
        initComponents();
        txtGroomingServiceName.setEditable(false);
        txtGroomingServicePrice.setEditable(false);
        this.userID = userID;
        this.databaseConnection = databaseConnection;
        this.emailNotification = emailNotification;
        this.smsNotification = smsNotification;
        populateTable();
    }

    private void populateTable()
    {
        try {
            ResultSet result = databaseConnection.executeSelect("SELECT * FROM groomingservices");
            DefaultTableModel model = (DefaultTableModel) groomingServiceTable.getModel();
            model.setRowCount(0);
            while(result.next())
            {
                Object[] row = new Object[4];
                row[0] = result.getInt("id");
                row[1] = result.getString("service_name");
                row[2] = result.getString("service_time");
                row[3] = result.getInt("service_cost");
                model.addRow(row);
            }
        } catch (Exception ex) {
            Logger.getLogger(petAccessoryAdminUpdatePrice.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSelectGroomingService = new javax.swing.JLabel();
        groomingServiceDateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        groomingServiceTable = new javax.swing.JTable();
        lblGroomingServiceName = new javax.swing.JLabel();
        txtGroomingServiceName = new javax.swing.JTextField();
        lblSelectADate = new javax.swing.JLabel();
        txtGroomingServicePrice = new javax.swing.JTextField();
        lblGroomingServiceCost = new javax.swing.JLabel();
        btnSubmitBooking = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 255));

        lblSelectGroomingService.setBackground(new java.awt.Color(255, 255, 255));
        lblSelectGroomingService.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblSelectGroomingService.setForeground(new java.awt.Color(255, 0, 0));
        lblSelectGroomingService.setText("                                                                      Select a Grooming Service");

        groomingServiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Service ID", "Service Name", "Service Time", "Service Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        groomingServiceTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        groomingServiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groomingServiceTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(groomingServiceTable);

        lblGroomingServiceName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblGroomingServiceName.setText("Service Name :");

        txtGroomingServiceName.setPreferredSize(new java.awt.Dimension(71, 30));
        txtGroomingServiceName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGroomingServiceNameActionPerformed(evt);
            }
        });

        lblSelectADate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblSelectADate.setText("Select Date :");

        txtGroomingServicePrice.setPreferredSize(new java.awt.Dimension(71, 30));
        txtGroomingServicePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGroomingServicePriceActionPerformed(evt);
            }
        });

        lblGroomingServiceCost.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblGroomingServiceCost.setText("Service Cost :");

        btnSubmitBooking.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSubmitBooking.setForeground(new java.awt.Color(255, 0, 0));
        btnSubmitBooking.setText("Submit Booking");
        btnSubmitBooking.setPreferredSize(new java.awt.Dimension(76, 30));
        btnSubmitBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitBookingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSelectGroomingService, javax.swing.GroupLayout.DEFAULT_SIZE, 953, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGroomingServiceName)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(lblGroomingServiceCost, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblSelectADate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtGroomingServiceName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGroomingServicePrice, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(groomingServiceDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(308, 308, 308))))
            .addGroup(layout.createSequentialGroup()
                .addGap(409, 409, 409)
                .addComponent(btnSubmitBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSelectGroomingService, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGroomingServiceName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGroomingServiceName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGroomingServicePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGroomingServiceCost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(groomingServiceDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelectADate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(btnSubmitBooking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtGroomingServiceNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGroomingServiceNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGroomingServiceNameActionPerformed

    private void txtGroomingServicePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGroomingServicePriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGroomingServicePriceActionPerformed

    private void btnSubmitBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitBookingActionPerformed
       
        try {
            // TODO add your handling code here:
            int selectedRowIndex = groomingServiceTable.getSelectedRow();
            if(selectedRowIndex < 0)
            {
                JOptionPane.showMessageDialog(this, "Please select a service!");
                return;
            }
            
            String serviceName = txtGroomingServiceName.getText();
            int serviceCost = Integer.parseInt(txtGroomingServicePrice.getText());
            Date date = groomingServiceDateChooser.getDate();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
            String strDate = dateFormat.format(date);
            String emailID = getEmailID(userID);
            String phoneNumber = getPhoneNumber(userID);
         
            databaseConnection.executeInsert("INSERT INTO groomingappointments (user_id, service_name, service_cost, service_date) VALUES ('"+userID+"', '"+serviceName+"', '"+serviceCost+"', '"+strDate+"')");
            
            JOptionPane.showMessageDialog(this, "Grooming Service Booked!");
            txtGroomingServiceName.setText("");
            txtGroomingServicePrice.setText("");
            
            emailNotification.sendEmail("Grooming Service Booked!", "Thank you for booking grooming service on : " + strDate, emailID);
            smsNotification.sendSMS("+1" + phoneNumber, "Thank you for booking grooming service on : " + strDate);
            
        } catch (Exception ex) {
            Logger.getLogger(petAccessoryAdminUpdatePrice.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSubmitBookingActionPerformed
    
    private String getEmailID(int userID)
    {
        try {
            ResultSet result = databaseConnection.executeSelect("SELECT * FROM usertable");
            
            while(result.next()){
                
                if(result.getInt("id") == userID)
                {
                    return result.getString("email_id");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(petFoodJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private String getPhoneNumber(int userID)
    {
        try {
            ResultSet result = databaseConnection.executeSelect("SELECT * FROM usertable");
            while(result.next()){
                
                if(result.getInt("id") == userID)
                {
                    return result.getString("phone_number");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(petFoodJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private void groomingServiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groomingServiceTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) groomingServiceTable.getModel();
        int selectedRowIndex = groomingServiceTable.getSelectedRow();
        String serviceName = (String) model.getValueAt(selectedRowIndex, 1);
        int serviceCost = (int)model.getValueAt(selectedRowIndex, 3);
        txtGroomingServiceName.setText(serviceName);
        txtGroomingServicePrice.setText(String.valueOf(serviceCost));
    }//GEN-LAST:event_groomingServiceTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmitBooking;
    private com.toedter.calendar.JDateChooser groomingServiceDateChooser;
    private javax.swing.JTable groomingServiceTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGroomingServiceCost;
    private javax.swing.JLabel lblGroomingServiceName;
    private javax.swing.JLabel lblSelectADate;
    private javax.swing.JLabel lblSelectGroomingService;
    private javax.swing.JTextField txtGroomingServiceName;
    private javax.swing.JTextField txtGroomingServicePrice;
    // End of variables declaration//GEN-END:variables
}
