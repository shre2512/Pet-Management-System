/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.databaseConnection;

/**
 *
 * @author shrey
 */
public class productSupplierAdminOpenOrders extends javax.swing.JPanel {

    /**
     * Creates new form productSupplierAdminOpenOrders
     */
    databaseConnection databaseConnection;
    
    public productSupplierAdminOpenOrders(databaseConnection databaseConnection) {
        initComponents();
        this.databaseConnection = databaseConnection;
        populateOpenFoodOrders();
        populateOpenAccessoryOrders();
    }
    
    private void populateOpenFoodOrders()
    {
        try {
            ResultSet result = databaseConnection.executeSelect("SELECT * FROM openordersfood");
            DefaultTableModel model = (DefaultTableModel) tableFoodItem.getModel();
            model.setRowCount(0);
            while(result.next())
            {
                Object[] row = new Object[3];
                row[0] = result.getInt("id");
                row[1] = getFoodProductName(result.getInt("product_id"));
                row[2] = result.getInt("order_quantity");
                model.addRow(row);
            }
        } catch (Exception ex) {
            Logger.getLogger(petAccessoryAdminOrderProductQuantity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void populateOpenAccessoryOrders()
    {
        try {
            ResultSet result = databaseConnection.executeSelect("SELECT * FROM openordersaccessory");
            DefaultTableModel model = (DefaultTableModel) tableAccessoryItem.getModel();
            model.setRowCount(0);
            while(result.next())
            {
                Object[] row = new Object[3];
                row[0] = result.getInt("id");
                row[1] = getAccessoryProductName(result.getInt("product_id"));
                row[2] = result.getInt("order_quantity");
                model.addRow(row);
            }
        } catch (Exception ex) {
            Logger.getLogger(petAccessoryAdminOrderProductQuantity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private String getFoodProductName(int foodId)
    {
        try {
            ResultSet result = databaseConnection.executeFoodNameSelect(foodId);
            String foodName = "";
            while(result.next())
            {
                foodName = result.getString("food_name");
            }
            return foodName;
        } catch (Exception ex) {
            Logger.getLogger(productSupplierAdminOpenOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }
    
    private String getAccessoryProductName(int accesoryID)
    {
        try {
            ResultSet result = databaseConnection.executeAccessoryNameSelect(accesoryID);
            String accessoryName = "";
            while(result.next())
            {
                accessoryName = result.getString("accessory_name");
            }
            return accessoryName;
        } catch (Exception ex) {
            Logger.getLogger(productSupplierAdminOpenOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFoodItemSupply = new javax.swing.JLabel();
        btnSupplyFoodItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFoodItem = new javax.swing.JTable();
        lblAccessoryItemSupply = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAccessoryItem = new javax.swing.JTable();
        btnSupplyAccessoryItem = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 255));

        lblFoodItemSupply.setBackground(new java.awt.Color(255, 255, 255));
        lblFoodItemSupply.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblFoodItemSupply.setForeground(new java.awt.Color(255, 0, 0));
        lblFoodItemSupply.setText("                                                                 Select a Food Item to Supply");

        btnSupplyFoodItem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSupplyFoodItem.setForeground(new java.awt.Color(255, 0, 0));
        btnSupplyFoodItem.setText("Supply Food Item");
        btnSupplyFoodItem.setPreferredSize(new java.awt.Dimension(76, 30));
        btnSupplyFoodItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupplyFoodItemActionPerformed(evt);
            }
        });

        tableFoodItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "Product Name", "Ordered Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableFoodItem);

        lblAccessoryItemSupply.setBackground(new java.awt.Color(255, 255, 255));
        lblAccessoryItemSupply.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblAccessoryItemSupply.setForeground(new java.awt.Color(255, 0, 0));
        lblAccessoryItemSupply.setText("                                                             Select an Accessory Item to Supply");

        tableAccessoryItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order ID", "Product Name", "Ordered Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableAccessoryItem);

        btnSupplyAccessoryItem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSupplyAccessoryItem.setForeground(new java.awt.Color(255, 0, 0));
        btnSupplyAccessoryItem.setText("Supply Accessory Item");
        btnSupplyAccessoryItem.setPreferredSize(new java.awt.Dimension(76, 30));
        btnSupplyAccessoryItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupplyAccessoryItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(lblFoodItemSupply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAccessoryItemSupply, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(btnSupplyAccessoryItem, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSupplyFoodItem, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(326, 326, 326))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFoodItemSupply, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSupplyFoodItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(lblAccessoryItemSupply, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSupplyAccessoryItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSupplyFoodItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupplyFoodItemActionPerformed
        try {
            // TODO add your handling code here:
            int selectedRowIndex = tableFoodItem.getSelectedRow();
            
            if(selectedRowIndex < 0)
            {
                JOptionPane.showMessageDialog(this, "Please Select a row!");
                return;
            }
            int orderID = (int)tableFoodItem.getValueAt(tableFoodItem.getSelectedRow(), 0);
            String productName = tableFoodItem.getValueAt(tableFoodItem.getSelectedRow(), 1).toString();
            int orderedQuantity = (int)tableFoodItem.getValueAt(tableFoodItem.getSelectedRow(), 2);
            databaseConnection.insertClosedOrdersFood(productName, orderedQuantity);
            databaseConnection.deleteOpenOrdersFood(orderID);
            databaseConnection.updatePetFood(productName, orderedQuantity);
            JOptionPane.showMessageDialog(this, "Product Supplied!");
            populateOpenFoodOrders();
        } catch (Exception ex) {
            Logger.getLogger(productSupplierAdminOpenOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSupplyFoodItemActionPerformed

    private void btnSupplyAccessoryItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupplyAccessoryItemActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            int selectedRowIndex = tableAccessoryItem.getSelectedRow();
            
            if(selectedRowIndex < 0)
            {
                JOptionPane.showMessageDialog(this, "Please Select a row!");
                return;
            }
            int orderID = (int)tableAccessoryItem.getValueAt(tableAccessoryItem.getSelectedRow(), 0);
            String productName = tableAccessoryItem.getValueAt(tableAccessoryItem.getSelectedRow(), 1).toString();
            int orderedQuantity = (int)tableAccessoryItem.getValueAt(tableAccessoryItem.getSelectedRow(), 2);
            databaseConnection.insertClosedOrdersAccessory(productName, orderedQuantity);
            databaseConnection.deleteOpenOrdersAccessory(orderID);
            databaseConnection.updatePetAccessories(productName, orderedQuantity);
            JOptionPane.showMessageDialog(this, "Product Supplied!");
            populateOpenAccessoryOrders();
        } catch (Exception ex) {
            Logger.getLogger(productSupplierAdminOpenOrders.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSupplyAccessoryItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSupplyAccessoryItem;
    private javax.swing.JButton btnSupplyFoodItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAccessoryItemSupply;
    private javax.swing.JLabel lblFoodItemSupply;
    private javax.swing.JTable tableAccessoryItem;
    private javax.swing.JTable tableFoodItem;
    // End of variables declaration//GEN-END:variables
}
